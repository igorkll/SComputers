{"init.lua": "bG9jYWwgcm9vdGZzID0gLi4uDQoNCmRvDQogICAgbG9jYWwgZnVuY3Rpb24gcmF3X2xvYWRmaWxlKHBhdGgpDQogICAgICAgIHJldHVybiBsb2FkKHJvb3Rmcy5yZWFkRmlsZShwYXRoKSwgIj0iIC4uIHBhdGgpDQogICAgZW5kDQoNCiAgICBsb2NhbCBzeXN0ZW0gPSBhc3NlcnQocmF3X2xvYWRmaWxlKCIvbGlicy9zeXN0ZW0ubHVhIikpKHJvb3RmcykNCmVuZA0KDQpsb2NhbCBzeXN0ZW0gPSByZXF1aXJlKCJzeXN0ZW0iKQ0KbG9jYWwgdmZzID0gcmVxdWlyZSgidmZzIikNCg0KZnVuY3Rpb24gb25TdGFydCgpDQogICAgLS0gbGF1bmNoaW5nIHN5c3RlbSBzZXJ2aWNlcw0KICAgIGxvY2FsIHNlcnZpY2VzUGF0aCA9ICIvc2VydmljZXMiDQogICAgZm9yIF8sIGZpbGUgaW4gaXBhaXJzKHN5c3RlbS5mczpnZXRGaWxlTGlzdChzZXJ2aWNlc1BhdGgpKSBkbw0KICAgICAgICBhc3NlcnQoc3lzdGVtLmV4ZWN1dGUodmZzLmNvbmNhdChzZXJ2aWNlc1BhdGgsIGZpbGUpKSkNCiAgICBlbmQNCg0KICAgIC0tIGFwcGxpY2F0aW9ucyBpbml0aWFsaXphdGlvbg0KICAgIGZvciBfLCBhcHBpbmZvIGluIGlwYWlycyhzeXN0ZW0uaW5zdGFsbGVkQXBwcygpKSBkbw0KICAgICAgICBzeXN0ZW0uaW5pdEFwcChhcHBpbmZvKQ0KICAgIGVuZA0KZW5kDQoNCmZ1bmN0aW9uIG9uVGljaygpDQogICAgc3lzdGVtLnByb2Nlc3Nob3N0OnRpY2soKQ0KDQogICAgZm9yIF8sIHByb2Nlc3MgaW4gaXBhaXJzKHN5c3RlbS5wcm9jZXNzaG9zdDpsaXN0KCkpIGRvDQogICAgICAgIGxvY2FsIGVyciA9IHByb2Nlc3M6Z2V0RXJyb3IoKQ0KICAgICAgICBpZiBlcnIgdGhlbg0KICAgICAgICAgICAgZXJyb3IoZXJyLCAyKQ0KICAgICAgICBlbmQNCiAgICBlbmQNCmVuZA0KDQpmdW5jdGlvbiBvblN0b3AoKQ0KICAgIHN5c3RlbS5wcm9jZXNzaG9zdDpkZXN0cm95KCkNCmVuZA0KDQpfZW5hYmxlQ2FsbGJhY2tzID0gdHJ1ZQ==", "apps/counter.app/config.json": "ew0KICAgICJ0ZXJtaW5hbCI6IHRydWUsDQogICAgImRpc3BsYXkiOiBmYWxzZSwNCiAgICAiZ3VpIjogZmFsc2UNCn0=", "apps/counter.app/main.lua": "bG9jYWwgc2NyaXB0RGF0YSA9IC4uLg0KbG9jYWwgc3lzdGVtID0gcmVxdWlyZSgic3lzdGVtIikNCmxvY2FsIHRlcm1pbmFsID0gc2NyaXB0RGF0YS5hcmdzLnRlcm1pbmFsDQoNCmxvY2FsIGNvdW50ZXIgPSAwDQoNCmZ1bmN0aW9uIG9uU3RhcnQoKQ0KZW5kDQoNCmZ1bmN0aW9uIG9uVGljaygpDQogICAgdGVybWluYWwud3JpdGUoY291bnRlciAuLiAiXG4iKQ0KICAgIGNvdW50ZXIgPSBjb3VudGVyICsgMQ0KZW5kDQoNCl9lbmFibGVDYWxsYmFja3MgPSB0cnVl", "apps/echobot.app/config.json": "ew0KICAgICJ0ZXJtaW5hbCI6IHRydWUsDQogICAgImRpc3BsYXkiOiBmYWxzZSwNCiAgICAiZ3VpIjogZmFsc2UNCn0=", "apps/echobot.app/main.lua": "bG9jYWwgc2NyaXB0RGF0YSA9IC4uLg0KbG9jYWwgc3lzdGVtID0gcmVxdWlyZSgic3lzdGVtIikNCmxvY2FsIHRlcm1pbmFsID0gc2NyaXB0RGF0YS5hcmdzLnRlcm1pbmFsDQoNCmZ1bmN0aW9uIG9uVGljaygpDQogICAgbG9jYWwgdGV4dCA9IHRlcm1pbmFsLnJlYWQoKQ0KICAgIGlmIHRleHQgdGhlbg0KICAgICAgICB0ZXJtaW5hbC53cml0ZSh0ZXh0IC4uICJcbiIpDQogICAgZW5kDQplbmQNCg0KX2VuYWJsZUNhbGxiYWNrcyA9IHRydWU=", "apps/gui_shell.app/config.json": "ew0KICAgICJ0ZXJtaW5hbCI6IGZhbHNlLA0KICAgICJkaXNwbGF5IjogdHJ1ZSwNCiAgICAiZ3VpIjogZmFsc2UsDQogICAgImhpZGRlbiI6IHRydWUNCn0=", "apps/gui_shell.app/main.lua": "bG9jYWwgc3lzdGVtID0gcmVxdWlyZSgic3lzdGVtIikNCg0KZnVuY3Rpb24gb25UaWNrKCkNCmVuZA0KDQpfZW5hYmxlQ2FsbGJhY2tzID0gdHJ1ZQ==", "apps/hello.app/config.json": "ew0KICAgICJ0ZXJtaW5hbCI6IHRydWUsDQogICAgImRpc3BsYXkiOiBmYWxzZSwNCiAgICAiZ3VpIjogZmFsc2UNCn0=", "apps/hello.app/main.lua": "bG9jYWwgc2NyaXB0RGF0YSA9IC4uLg0KbG9jYWwgc3lzdGVtID0gcmVxdWlyZSgic3lzdGVtIikNCmxvY2FsIHRlcm1pbmFsID0gc2NyaXB0RGF0YS5hcmdzLnRlcm1pbmFsDQoNCmZ1bmN0aW9uIG9uU3RhcnQoKQ0KICAgIHRlcm1pbmFsLndyaXRlKCJoZWxsbywgd29ybGQhXG4iKQ0KICAgIHN5c3RlbS5jbG9zZUFwcChzY3JpcHREYXRhKQ0KZW5kDQoNCl9lbmFibGVDYWxsYmFja3MgPSB0cnVl", "apps/terminal_shell.app/config.json": "ew0KICAgICJ0ZXJtaW5hbCI6IHRydWUsDQogICAgImRpc3BsYXkiOiBmYWxzZSwNCiAgICAiZ3VpIjogZmFsc2UsDQogICAgImhpZGRlbiI6IHRydWUNCn0=", "apps/terminal_shell.app/main.lua": "", "libs/system.lua": "", "services/mounting.lua": "bG9jYWwgc3lzdGVtID0gcmVxdWlyZSgic3lzdGVtIikNCg0KbG9jYWwgZGlza3NBdHRhY2hDaGVjayA9IHt9DQpsb2NhbCByb21zQXR0YWNoQ2hlY2sgPSB7fQ0KZnVuY3Rpb24gb25UaWNrKCkNCiAgICBzeXN0ZW0uY2hlY2tBdHRhY2hEZXRhY2hDb21wb25lbnRzKCJkaXNrIiwgZGlza3NBdHRhY2hDaGVjaywgZnVuY3Rpb24gKGF0dGFjaCwgY29tcG9uZW50LCBkYXRhKQ0KICAgICAgICBpZiBhdHRhY2ggdGhlbg0KICAgICAgICAgICAgc3lzdGVtLm1vdW50KCJkaXNrIiwgZGF0YS5pbmRleCwgY29tcG9uZW50KQ0KICAgICAgICBlbHNlDQogICAgICAgICAgICBzeXN0ZW0uZnM6dW5tb3VudChjb21wb25lbnQpDQogICAgICAgIGVuZA0KICAgIGVuZCkNCg0KICAgIHN5c3RlbS5jaGVja0F0dGFjaERldGFjaENvbXBvbmVudHMoInJvbSIsIHJvbXNBdHRhY2hDaGVjaywgZnVuY3Rpb24gKGF0dGFjaCwgY29tcG9uZW50LCBkYXRhKQ0KICAgICAgICBpZiBhdHRhY2ggdGhlbg0KICAgICAgICAgICAgbG9jYWwgb2ssIHJlc3VsdCA9IHBjYWxsKGNvbXBvbmVudC5vcGVuRmlsZXN5c3RlbUltYWdlKQ0KICAgICAgICAgICAgaWYgb2sgYW5kIHR5cGUocmVzdWx0KSA9PSAidGFibGUiIHRoZW4NCiAgICAgICAgICAgICAgICBkYXRhLmZzID0gcmVzdWx0DQogICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgbG9jYWwgb2ssIHJlc3VsdCA9IHBjYWxsKGNvbXBvbmVudC5vcGVuRmlsZXN5c3RlbUR1bXApDQogICAgICAgICAgICAgICAgaWYgb2sgYW5kIHR5cGUocmVzdWx0KSA9PSAidGFibGUiIHRoZW4NCiAgICAgICAgICAgICAgICAgICAgZGF0YS5mcyA9IHJlc3VsdA0KICAgICAgICAgICAgICAgIGVuZA0KICAgICAgICAgICAgZW5kDQoNCiAgICAgICAgICAgIGlmIGRhdGEuZnMgdGhlbg0KICAgICAgICAgICAgICAgIHN5c3RlbS5tb3VudCgicm9tIiwgZGF0YS5pbmRleCwgZGF0YS5mcykNCiAgICAgICAgICAgIGVuZA0KICAgICAgICBlbHNlaWYgZGF0YS5mcyB0aGVuDQogICAgICAgICAgICBzeXN0ZW0uZnM6dW5tb3VudChkYXRhLmZzKQ0KICAgICAgICBlbmQNCiAgICBlbmQpDQplbmQNCg0KX2VuYWJsZUNhbGxiYWNrcyA9IHRydWU=", "services/runshell.lua": "bG9jYWwgc3lzdGVtID0gcmVxdWlyZSgic3lzdGVtIikNCg0KbG9jYWwgdGVybWluYWxBdHRhY2hDaGVjayA9IHt9DQpsb2NhbCBkaXNwbGF5QXR0YWNoQ2hlY2sgPSB7fQ0KZnVuY3Rpb24gb25UaWNrKCkNCiAgICBzeXN0ZW0uY2hlY2tBdHRhY2hEZXRhY2hDb21wb25lbnRzKCJ0ZXJtaW5hbCIsIHRlcm1pbmFsQXR0YWNoQ2hlY2ssIGZ1bmN0aW9uIChhdHRhY2gsIGNvbXBvbmVudCwgZGF0YSkNCiAgICAgICAgaWYgYXR0YWNoIHRoZW4NCiAgICAgICAgICAgIGRhdGEuc2NyaXB0RGF0YSA9IGFzc2VydChzeXN0ZW0uZXhlY3V0ZSgidGVybWluYWxfc2hlbGwiLCB7DQogICAgICAgICAgICAgICAgdGVybWluYWwgPSBjb21wb25lbnQNCiAgICAgICAgICAgIH0pKQ0KICAgICAgICBlbHNlaWYgZGF0YS5zY3JpcHREYXRhIHRoZW4NCiAgICAgICAgICAgIGRhdGEuc2NyaXB0RGF0YS5wcm9jZXNzOmRlc3Ryb3koKQ0KICAgICAgICBlbmQNCiAgICBlbmQpDQoNCiAgICBzeXN0ZW0uY2hlY2tBdHRhY2hEZXRhY2hDb21wb25lbnRzKCJkaXNwbGF5IiwgZGlzcGxheUF0dGFjaENoZWNrLCBmdW5jdGlvbiAoYXR0YWNoLCBjb21wb25lbnQsIGRhdGEpDQogICAgICAgIGlmIGF0dGFjaCB0aGVuDQogICAgICAgICAgICBkYXRhLnNjcmlwdERhdGEgPSBhc3NlcnQoc3lzdGVtLmV4ZWN1dGUoImd1aV9zaGVsbCIsIHsNCiAgICAgICAgICAgICAgICBkaXNwbGF5ID0gY29tcG9uZW50DQogICAgICAgICAgICB9KSkNCiAgICAgICAgZWxzZWlmIGRhdGEuc2NyaXB0RGF0YSB0aGVuDQogICAgICAgICAgICBkYXRhLnNjcmlwdERhdGEucHJvY2VzczpkZXN0cm95KCkNCiAgICAgICAgZW5kDQogICAgZW5kKQ0KZW5kDQoNCl9lbmFibGVDYWxsYmFja3MgPSB0cnVl"}